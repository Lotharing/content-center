server:
  port: 8010
# 开启监控
management:
  endpoints:
    web:
      exposure:
        # 这里用* 代表暴露所有端点只是为了观察效果，实际中按照需进行端点暴露
        include: "*"
spring:
  zipkin:
    base-url: http://localhost:9411/
    # 关闭服务发现,解决异常 http://www.imooc.com/article/291578
    discoveryClientEnabled: false
  sleuth:
    sampler:
      # 抽样率1.0 = 100% 上报所有,默认1.0 , 抽样降低对应用性能对影响
      probability: 1.0
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/content_center?useSSL=false
    username: root
    password: Lutong~918

  application:
    # 服务名称
    name: content-center
  cloud:
    nacos:
      discovery:
        # 服务注册地址
        server-addr: localhost:8848
        # 命名空间 dev
        namespace: 6b0e9c31-3145-411d-bf5f-439f90a03ad2
        cluster-name: BJ
        # k: v形式的元数据信息配置
        metadata:
          # 自己实例版本
          version: v1
          # 允许调用者的实例版本
          target-version: v1
    sentinel:
      transport:
        # 指定sentinel控制台的地址
        dashboard: localhost:8080
    # 消息stream流
    stream:
      rocketmq:
        # 目标绑定器与消息中间件通信
        binder:
          name-server: 127.0.0.1:9876
        # 可以通过bindings从rabbit消费消息，在经过应用处理给kafka生产消息
      bindings:
        output:
          # 指定topic,{相同的topic进行生产消费对应}
          destination: stream-my-topic


# 这种是通过配置的方式实现Ribbon在对某个服务调用时候的自定义配置,比如这个负载均衡算法
#user-center:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule

# ribbon 指定为user-center开启饥饿加载, 多个 , 分割
ribbon:
  eager-load:
    clients: user-center
    enabled: true

# 日志
logging:
  level:
    top.lothar.contentcenter.feignclient.UserCenterFeignClient: debug
    # 只打印error级别的日志
    com.alibaba.nacos: error

# feign配置方式去打印日志,要把@FeignClient注解上的configuration配置类去掉
#feign:
#  client:
#    config:
# 服务名称改为default: 就可以变全局配置 ， 日志级别BASIC也可以给性能进行提高
#      user-center:
#        loggerLevel: full

feign:
  sentinel:
    # 为feign整合sentinel
    enabled: true
  client:
    config:
      default:
        loggerLevel: full
        requestInterceptors:
          - top.lothar.contentcenter.feignclient.intercept.TokenRelayRequestIntercept
  httpclient:
    # 让feign使用apache的httpclient做亲求，而不是默认的UrlConnection
    enabled: true
    # feign最大连接数
    max-connections: 200
    # feign单个路径「一个feign接口里边的一个方法」的最大连接数 , 可根据压测结果进行调优
    max-connections-per-route: 50

# apache的okhttp的请求方式，也可配置连接池
#  okhttp:
#    enabled: true

rocketmq:
  name-server: 127.0.0.1:9876
  producer:
    # 必须指定
    group: test-group

#JWT密钥配置
jwt:
  secret: MQj3al5#jH&9@notebylothar
  # 有效期，单位秒，默认2周
  expire-time-in-second: 1209600





